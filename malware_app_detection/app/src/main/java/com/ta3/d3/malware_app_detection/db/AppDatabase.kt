package com.ta3.d3.malware_app_detection.db

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase
import androidx.room.TypeConverters
import com.ta3.d3.malware_app_detection.db.dao.UserDao
import com.ta3.d3.malware_app_detection.db.entities.User

@Database(entities = [User::class], version = 1)
@TypeConverters(DateTypeConverter::class)
abstract  class AppDatabase : RoomDatabase() {
    abstract fun userDao(): UserDao
    companion object{
        @Volatile private var instance : AppDatabase ? = null
        private val  LOCK = Any()

        operator fun invoke(context: Context) = instance ?: synchronized(LOCK){
            instance?:buildDatabase(context).also{
                instance = it
            }
        }

        private fun buildDatabase(context: Context) = Room.databaseBuilder(
            context.applicationContext,
            AppDatabase::class.java,
            "maltorApp"
        ).build()
    }
}